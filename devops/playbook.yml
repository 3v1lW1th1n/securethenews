---

- name: Establish certs
  hosts: all
  become: yes
  roles:
    - role: freedomofpress.openssl_node
      tags: ssl-node

- name: Setup postgres
  hosts: all
  become: yes
  pre_tasks:
    - name: Ensure ssl-cert user exists
      group:
        name: ssl-cert

    - name: Allow postgres user access
      file:
        path: /etc/ssl/private/{{ansible_fqdn}}-key.pem
        mode: 0640
        group: ssl-cert
  roles:
    - role: ANXS.postgresql
      tags: ['postgres']
  vars:
    postgresql_users:
      - name: django_user
        pass: django_password
    postgresql_databases:
      - name: stn
        owner: django_user
    postgresql_user_privileges:
      - name: django_user
        db: stn
        priv: "ALL"
        role_attr_flags: "CREATEDB"
    postgresql_ssl: on
    postgresql_ssl_cert_file: /etc/ssl/certs/{{ansible_fqdn}}.pem
    postgresql_ssl_key_file: /etc/ssl/private/{{ansible_fqdn}}-key.pem
    postgresql_pg_hba_custom:
      - type: hostssl
        database: all
        user: all
        address: 'samenet'
        method: md5

- name: Run django environment
  hosts: all
  become: yes
  pre_tasks:
    - name: Create user
      user:
        name: "{{ django_stack_gcorn_user }}"
        home: "{{ django_stack_gcorn_home }}"
        createhome: yes
      tags: ['node']
  roles:
    - role: jdauphant.nginx
      tags: ['nginx']

    - role: geerlingguy.nodejs
      tags: ['node']

    - role: freedomofpress.django_stack
      tags: ['django']
  post_tasks:
    - debug:
        msg: "You can hit the www interface at https://{{ ansible_default_ipv4.address }} or https://localhost:4443"
  vars:
    django_stack_superuser_admin: admin
    django_stack_superuser_email: webmaster@freedom.press
    django_stack_app_dir: "{{ django_stack_deploy_dir }}/securethenews"
    django_db_user: django_user
    django_db_host: localhost
    django_db_password: django_password
    django_stack_app_name: securethenews
    django_secret_key: f1822d2fe58daeadc88e0e4eef2f155fc3edd3713ff9a5d1e27696afd9231d905db51c98dc
    django_stack_es_host_url: disable
    nginx_sites:
      default:
        - listen 80
        - return 301 https://localhost:4443$request_uri
      encrypted:
        - listen 443 ssl
        - location / { proxy_pass http://127.0.0.1:8000/; }
        - location /static { alias /var/www/django-static; }
        - location /media { alias /var/www/django-media; }
        - ssl_certificate /etc/ssl/certs/{{ansible_fqdn}}.pem
        - ssl_certificate_key /etc/ssl/private/{{ansible_fqdn}}-key.pem
    nodejs_version: "4.x"
    nodejs_install_npm_user: "{{ django_stack_gcorn_user }}"
    django_stack_git_deploy: []
    django_stack_git_repo: []
    django_stack_manage_post:
      - loaddata fixtures/prod.json
    django_stack_shell_commands:
      - gulp build:production
    django_stack_npm_global_pkgs:
      - gulp
    django_stack_optional_pip:
      - name: git+git://github.com/dhs-ncats/pshtt@7362a8bdabe7190a933e4c5e18561ba9d07dc561#egg=pshtt
        python: python2
    django_stack_pkgs:
      - aptitude
      - git
      - ipython3
      - libjpeg-dev
      - libpq-dev
      - python-dev
      - python-pip
      - python3-pip
      - ruby
      - tmux
      - vim
      - virtualenv
      - zlib1g-dev
    django_stack_gunicorn_opt_envs:
      DJANGO_ALLOWED_HOSTS: "'*'"
      DJANGO_LOG: no
      DJANGO_LOG_LEVEL: debug
    django_stack_gcorn_home: /home/vagrant
    django_stack_gcorn_user: vagrant
    django_stack_gcorn_group: vagrant
    django_stack_force_refresh: true
