ARG NODE_VER=4.8.2-alpine
FROM node:${NODE_VER} AS node-assets

# Oddly, node-sass requires both python and make to build bindings
RUN apk add --no-cache paxctl python make g++
RUN paxctl -cm /usr/local/bin/node
# Install gulp globally so it can be used during builds
RUN npm install --global gulp-cli

COPY ./ /src-files
RUN cd /src-files && ( npm install && gulp build:production )


# 3.6.5-alpine3.7 - May 11, 2018
FROM python@sha256:bfac58481666aeb60ff6354e81afe888cc8c7b1effb1039870377fc7fa86ef43

LABEL maintainer="Freedom of the Press"
LABEL app="stn-www"

RUN apk add --no-cache \
            curl=7.59.0-r0 \
            gcc=6.4.0-r5 \
            git=2.15.0-r1 \
            # pillow dep
            jpeg-dev=8-r6 \
            libffi-dev=3.2.1-r4 \
            musl-dev=1.1.18-r3 \
            paxctl=0.9-r0 \
            postgresql-dev=10.4-r0 \
            # pillow dep
            tiff-dev=4.0.9-r2 \
            # pillow dep
            zlib-dev=1.2.11-r1


RUN adduser -D -g "" gcorn

RUN paxctl -cm /usr/local/bin/python
COPY --from=node-assets /src-files/ /django/
# Unfortunately the chown flag in COPY is not
# available in my docker system version :(
RUN find /django -path /django/node_modules -prune -o -print -exec chown gcorn: '{}' \;

WORKDIR /django
RUN pip install -r /django/securethenews/requirements.txt

# Really not used in production. Needed for mapped named volume
# permission handling https://github.com/docker/compose/issues/3270
RUN  mkdir /django-media /django-static /django-logs && \
     chown -R gcorn: /django-media && \
     chown -R gcorn: /django-static && \
     chown -R gcorn: /django-logs

EXPOSE 8000
USER gcorn
CMD ./manage.py migrate && ./manage.py runserver 0.0.0.0:8000
