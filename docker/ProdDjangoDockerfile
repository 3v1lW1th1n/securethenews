ARG NODE_VER
ARG DEPLOY_ENV
ARG DJANGO_ALLOWED_HOSTS
ARG DJANGO_DB_HOST
ARG DJANGO_DB_PASSWORD
ARG DJANGO_DB_USER
ARG DJANGO_DB_NAME
ARG DJANGO_DB_PORT
ARG DJANGO_STATIC_ROOT
ARG DJANGO_MEDIA_ROOT
ARG DJANGO_SETTINGS_MODULE
ARG DJANGO_SECRET_KEY
ARG DJANGO_LOG_CONSOLE

FROM node:${NODE_VER} AS node-assets

# Make npm output less verbose
ENV NPM_CONFIG_LOGLEVEL warn

# Workaround to avoid webpack hanging, see:
# https://github.com/webpack/webpack-dev-server/issues/128
ENV UV_THREADPOOL_SIZE 128

# Oddly, node-sass requires both python and make to build bindings
RUN apk add --no-cache paxctl python make g++
RUN paxctl -cm /usr/local/bin/node

COPY ./ /src-files
RUN cd /src-files && ( npm install && npm run build )
# python:3.6-slim-stretch - May 31, 2019
FROM python@sha256:bab4801d3ea2b1b5a796e96c37654e6e8c2619d0ddbdc1314bb03e09361cc117

RUN apt-get update && \
        apt-get install -y \
        bash \
        build-essential \
        curl \
        gcc \
        git \
        libjpeg-dev \
        libffi-dev \
        libpq-dev \
        libtiff-dev \
        libssl-dev \
        libz-dev \
        musl-dev \
        netcat-traditional \
        paxctl \
        python3-dev

COPY docker/django-start.sh /usr/local/bin
RUN  chmod +x /usr/local/bin/django-start.sh

RUN adduser --gecos "" gcorn

LABEL MAINTAINER="Freedom of the Press Foundation"
LABEL APP="securethenews"

RUN paxctl -cm /usr/local/bin/python
COPY --from=node-assets /src-files/ /django/
# Unfortunately the chown flag in COPY is not
# available in my docker system version :(
RUN find /django -path /django/node_modules -prune -o -print -exec chown gcorn: '{}' \;

WORKDIR /django
RUN pip install -r /django/securethenews/requirements.txt

# Really not used in production. Needed for mapped named volume
# permission handling https://github.com/docker/compose/issues/3270
RUN  mkdir /django-media /django-static /django-logs && \
     chown -R gcorn: /django-media && \
     chown -R gcorn: /django-static && \
     chown -R gcorn: /django-logs

RUN mkdir -p /etc/gunicorn && chown -R gcorn: /etc/gunicorn
COPY docker/gunicorn/gunicorn.py /etc/gunicorn/gunicorn.py

RUN mkdir /deploy && \
    chown -R gcorn: /deploy

ENV DEPLOY_ENV ${DEPLOY_ENV}
ENV DJANGO_ALLOWED_HOSTS ${DJANGO_ALLOWED_HOSTS}
ENV DJANGO_DB_HOST ${DJANGO_DB_HOST}
ENV DJANGO_DB_PASSWORD ${DJANGO_DB_PASSWORD}
ENV DJANGO_DB_USER {$DJANGO_DB_USER}
ENV DJANGO_DB_NAME ${DJANGO_DB_NAME}
ENV DJANGO_DB_PORT ${DJANGO_DB_PORT}
ENV DJANGO_SETTINGS_MODULE ${DJANGO_SETTINGS_MODULE}
ENV DJANGO_SECRET_KEY ${DJANGO_SECRET_KEY}
ENV DJANGO_STATIC_ROOT ${DJANGO_STATIC_ROOT}
ENV DJANGO_MEDIA_ROOT ${DJANGO_MEDIA_ROOT}
ENV DJANGO_LOG_CONSOLE ${DJANGO_LOG_CONSOLE}

RUN /django/scripts/version-file.sh

RUN cd /django && ./manage.py collectstatic -c --noinput

EXPOSE 8000
USER gcorn

CMD django-start.sh
